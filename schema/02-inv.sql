CREATE TABLE inv.unit (
    id INTEGER GENERATED BY DEFAULT  AS IDENTITY PRIMARY KEY,
    name VARCHAR(30) NOT NULL,
    abbreviation VARCHAR(10) NOT NULL,
    detail VARCHAR(100) NOT NULL
);

INSERT INTO inv.unit(name, abbreviation, detail) VALUES ('Miligramos', 'mg', 'Ingredientes secos');
INSERT INTO inv.unit(name, abbreviation, detail) VALUES ('Gramos', 'gr', 'Ingredientes secos');
INSERT INTO inv.unit(name, abbreviation, detail) VALUES ('Kilogramos', 'kg', 'Ingredientes secos');
INSERT INTO inv.unit(name, abbreviation, detail) VALUES ('Mililitros', 'ml', 'Ingredientes humedos');
INSERT INTO inv.unit(name, abbreviation, detail) VALUES ('Litros', 'l', 'Ingredientes humedos');

CREATE TABLE inv.brand (
    id INTEGER GENERATED BY DEFAULT  AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

CREATE TABLE inv.article_category (
    id INTEGER GENERATED BY DEFAULT  AS IDENTITY PRIMARY KEY,
    detail VARCHAR(50) NOT NULL
);

CREATE TABLE inv.article (
    id INTEGER GENERATED BY DEFAULT  AS IDENTITY PRIMARY KEY,
    brand INTEGER REFERENCES inv.brand(id),
    category INTEGER REFERENCES inv.article_category(id),
    name VARCHAR(250) NOT NULL,
    unit INTEGER REFERENCES inv.unit(id),
    is_consumable BOOLEAN NOT NULL
);

CREATE TABLE inv.article_detail (
    article INTEGER REFERENCES inv.article(id),
    length FLOAT,
    width FLOAT,
    height FLOAT,
    weight FLOAT
);

CREATE TABLE inv.inventory_detail (
    article INTEGER REFERENCES inv.article(id),
    quantity FLOAT NOT NULL,
    due_date DATE,
    is_available BOOLEAN NOT NULL,
    registered TIMESTAMP NOT NULL
);